//Подключение внешней компоненты

Процедура ПроверитьПодключение(ЭкземплярRMQ) Экспорт
	
	КлиентКомпоненты = ПолучитьКомпоненту();
	ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, ЭкземплярRMQ);

КонецПроцедуры 

Функция ПолучитьКомпоненту()
	
	КлиентКомпоненты = Неопределено;
	Если Не ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты) Тогда
		
		ПодключитьКомпоненту();
		ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты);
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;
	
КонецФункции   

Функция ИнициализироватьКомпонентуКлиентСервер(Компонента)
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ПодключитьКомпоненту(КомпонентаПодключена = Неопределено)
	
	АдресВоВременномХранилище = ПолучитьАдресМакетаКомпановки();
	КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
	АдресВоВременномХранилище,
	"BITERP",
	ТипВнешнейКомпоненты.Native); 

	ВывестиСообщение("Компонента подключена!");
	  	
КонецПроцедуры  

Функция ПолучитьАдресМакетаКомпановки()
	
	МакетВнешнейКомпоненты    = ПолучитьМакет("ВнешняяКомпонента");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(МакетВнешнейКомпоненты);
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции

Процедура ПроверитьПодключениеКлиентСервер(КлиентКомпоненты, ЭкземплярRMQ)
	
	Попытка
		КлиентКомпоненты.Connect(
		ЭкземплярRMQ.Адрес,
		ЭкземплярRMQ.Порт,
		ЭкземплярRMQ.Логин,
		ЭкземплярRMQ.Пароль,
		ЭкземплярRMQ.ВиртуальныйХост);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка подключения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	ВывестиСообщение(НСтр("ru = 'Подключение успешно выполнено!'"));
	
КонецПроцедуры  

// Инициализация в Rabbit MQ     

Процедура СоздатьТочкуИОчередьВRabbitMQ(СтруктураПодключение) Экспорт
	
	КлиентКомпоненты = ПолучитьКомпоненту();
	СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, СтруктураПодключение); 
	
КонецПроцедуры

Процедура СозданиеТочкиИОчередиКлиентСервер(КлиентКомпоненты, СтруктураПодключение)
	
	Попытка
		КлиентКомпоненты.Connect(
			СтруктураПодключение.Адрес,
			СтруктураПодключение.Порт,
			СтруктураПодключение.Логин,
			СтруктураПодключение.Пароль,
			СтруктураПодключение.ВиртуальныйХост);
			
		ТочкаОбмена = СтруктураПодключение.ТочкаОбмена;
		ИмяОчереди  = СтруктураПодключение.ИмяОчереди;
		Канал = СтруктураПодключение.Канал;
		КлючМаршрутизации = СтруктураПодключение.КлючМаршрутизации;
		Если Канал = "" Тогда
			Канал = "topic";
		КонецЕсли;  
		Если ИмяОчереди = "" Тогда
			ИмяОчереди = КлючМаршрутизации;
			КлючМаршрутизации = "#" + КлючМаршрутизации + "#";
		КонецЕсли;  
		Если КлючМаршрутизации = "" Тогда
			КлючМаршрутизации = "#" + ИмяОчереди + "#";
		КонецЕсли;

		КлиентКомпоненты.DeclareExchange(ТочкаОбмена, Канал, Ложь, Истина, Ложь);
		КлиентКомпоненты.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
		//КлиентКомпоненты.BindQueue(ИмяОчереди, ТочкаОбмена, КлючМаршрутизации);
		КлиентКомпоненты.BindQueue(ИмяОчереди, ТочкаОбмена, КлючМаршрутизации);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка создания точек и очередей!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	ВывестиСообщение("Точки и очереди успешно созданы!");  
	
КонецПроцедуры

// Отправка сообщений

Процедура ОтправитьСообщения(СтруктураПодключение, ТаблицаСообщений) Экспорт
	
	КлиентКомпоненты = ПодключитьсяКRabbitMQ(СтруктураПодключение);  
	Для Каждого Строка Из ТаблицаСообщений Цикл       
		
		ТекстСообщения = Строка.ХранилищеСообщения.Получить();  
		Если ЗначениеЗаполнено(Строка.НастройкиМаршрутизации) Тогда 	
			СтруктураПодключение.Вставить("ИмяОчереди", Строка.ИмяОчереди);
			СтруктураПодключение.Вставить("КлючМаршрутизации", Строка.КлючМаршрутизации);
			СтруктураПодключение.Вставить("ТочкаОбмена", Строка.ТочкаОбмена);
		КонецЕсли;
		ОтправитьСообщение(КлиентКомпоненты, СтруктураПодключение, ТекстСообщения);  
		ОбработчикиСобытийRMQ.ОбновитьСостояниеСообщенияRMQВОчереди(ТекстСообщения, Строка.Ссылка, Строка.Период, Перечисления.СостоянияСообщенийRMQ.Отправлено);
		
	КонецЦикла;  
	
	ВывестиСообщение("Сообщение успешно отправлено!");
	
КонецПроцедуры 

Функция ПодключитьсяКRabbitMQ(СтруктураПодключение)  
	
	КлиентКомпоненты = ПолучитьКомпоненту();
	
	Попытка	
		КлиентКомпоненты.Connect(
				СтруктураПодключение.Адрес,
				СтруктураПодключение.Порт,
				СтруктураПодключение.Логин,
				СтруктураПодключение.Пароль,
				СтруктураПодключение.ВиртуальныйХост);
	Исключение     
				
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		
		ВызватьИсключение ТекстСообщения;

	КонецПопытки;
		
	Возврат КлиентКомпоненты;

КонецФункции

Процедура ОтправитьСообщение(КлиентКомпоненты, СтруктураПодключение, ТекстСообщения)
	
	Попытка
				
		ТочкаОбмена    = СтруктураПодключение.ТочкаОбмена;
		ИмяОчереди     = СтруктураПодключение.ИмяОчереди;  
		КлючМаршрутизации = СтруктураПодключение.КлючМаршрутизации;
		Если СтруктураПодключение.КлючМаршрутизации = "" Тогда
			КлючМаршрутизации = "#" + СтруктураПодключение.ИмяОчереди + "#";
		КонецЕсли;
		
		КлиентКомпоненты.BasicPublish(
			ТочкаОбмена,
			КлючМаршрутизации,
			ТекстСообщения,
			1,
			Ложь);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
		
КонецПроцедуры

// Получение сообщений

Процедура ПолучитьСообщения(СтруктураПодключение, ТаблицаПолученныхСообщений) Экспорт
	     
	КлиентКомпоненты = ПодключитьсяКRabbitMQ(СтруктураПодключение);
	ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, СтруктураПодключение, ТаблицаПолученныхСообщений);
	
КонецПроцедуры 

Процедура ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, СтруктураПодключение, ТаблицаПолученныхСообщений)
	
	Попытка
				
		ИмяОчереди = СтруктураПодключение.ИмяОчереди;
		
		Попытка
			
			Потребитель = КлиентКомпоненты.BasicConsume(ИмяОчереди, "", Ложь, Ложь, 0); 
			ОтветноеСообщение = "";    
			ТегСообщения = 0;
			Пока КлиентКомпоненты.BasicConsumeMessage(Потребитель, ОтветноеСообщение, ТегСообщения) Цикл  
				КлиентКомпоненты.BasicAck(); 
				НоваяСтрока = ТаблицаПолученныхСообщений.Добавить();      
				НоваяСтрока.Сообщение = ОтветноеСообщение;
				ОтветноеСообщение = ""; 
				ТегСообщения = 0; 
			КонецЦикла;
			ОтветноеСообщение = "";				
			КлиентКомпоненты.BasicCancel("");  
			
		Исключение           
			
			ВызватьИсключение КлиентКомпоненты.GetLastError();  
			
		КонецПопытки; 
		
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка чтения сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
КонецПроцедуры

// Вспомогательные процедуры

Процедура ВывестиСообщение(Текст) 
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Сообщение.Сообщить(); 
КонецПроцедуры



