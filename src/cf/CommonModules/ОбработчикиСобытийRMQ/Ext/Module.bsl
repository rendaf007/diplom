#Область ОбработчикиЗаписи

Процедура ПриЗаписиСправочников(Источник, Отказ) Экспорт  
	
	Если ОбъектВходитВСписокОбменаRMQ(Источник) Тогда		
		ЗарегистрироватьВОчередьОтправкуСообщенийRMQ(Источник);  
	КонецЕсли;
	
КонецПроцедуры  

Функция ОбъектВходитВСписокОбменаRMQ(Источник)  
	
	ИмяМетаданных = ПолучитьПредставлениеОбъектаМетаданных(Источник);   
	ВыборкаДетальныеЗаписи = ОбслуживаниеСообщенийRMQ.ПолучитьВыборкуВидовОбъектовДляОбменаRMQ(ИмяМетаданных);
	НуженОбмен =  ВыборкаДетальныеЗаписи.Следующий(); 
	
	Возврат НуженОбмен;
КонецФункции

Процедура ЗарегистрироватьВОчередьОтправкуСообщенийRMQ(Источник) 

	ВыборкаДетальныеЗаписи = ПолучитьВыборкуОжидающихОтправкуСообщенийRMQ(Источник);	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		ОбработатьСуществующееСообщение(Источник, ВыборкаДетальныеЗаписи);   
		
	Иначе
		
		Сообщение = ПодготовитьСообщение(Источник);
		ОбновитьСостояниеСообщенияRMQВОчереди(Сообщение, Источник);
		
	КонецЕсли;  
		
КонецПроцедуры   

Функция ПолучитьВыборкуОжидающихОтправкуСообщенийRMQ(Источник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщенияRMQСрезПоследних.Период КАК Период,
		|	СообщенияRMQСрезПоследних.ОбъектМетаданных КАК ОбъектМетаданных,
		|	СообщенияRMQСрезПоследних.Идентификатор КАК Идентификатор,
		|	СообщенияRMQСрезПоследних.ХранилищеСообщения КАК ХранилищеСообщения,
		|	СообщенияRMQСрезПоследних.Состояние КАК Состояние
		|ИЗ
		|	РегистрСведений.СообщенияRMQ.СрезПоследних(
		|			,
		|			Идентификатор = &Идентификатор
		|				И ОбъектМетаданных = &ОбъектМетаданных
		|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСообщенийRMQ.ЖдетОтправки)) КАК СообщенияRMQСрезПоследних";
	
	Запрос.УстановитьПараметр("Идентификатор", Источник.Ссылка.УникальныйИдентификатор());
	Запрос.УстановитьПараметр("ОбъектМетаданных", ПолучитьПредставлениеОбъектаМетаданных(Источник)); 
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
	
	Возврат ВыборкаДетальныеЗаписи;

КонецФункции

Процедура ОбработатьСуществующееСообщение(Источник, ВыборкаСуществующееСообщение) 
	
	ХранилищеСообщения = ВыборкаСуществующееСообщение.ХранилищеСообщения;
	СообщениеИзОчереди = ХранилищеСообщения.Получить();

	ТекущееСообщениеИсточника = ПодготовитьСообщение(Источник);
	Если СообщениеИзОчереди = ТекущееСообщениеИсточника Тогда  
		// изменений в объекте нет
		Возврат;
	КонецЕсли;  
	
	ОбновитьСостояниеСообщенияRMQВОчереди(ТекущееСообщениеИсточника, Источник, ВыборкаСуществующееСообщение.Период);
	
КонецПроцедуры   

Функция ПодготовитьСообщение(Источник)  
	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);  	
	
	Запись = Новый ЗаписьJSON; 
	Запись.УстановитьСтроку(); 
	
	Сериализатор.ЗаписатьJSON(Запись, Источник, НазначениеТипаXML.Явное);	
	ТекстСообщения = Запись.Закрыть(); 
	
	Возврат ТекстСообщения;  
	
КонецФункции

Процедура ОбновитьСостояниеСообщенияRMQВОчереди(Сообщение, Источник, Период = Неопределено, Состояние = Неопределено) Экспорт
	
	Если Период = Неопределено Тогда
		Период = ТекущаяДата();
	КонецЕсли;    
	Если Состояние = Неопределено Тогда 
		Состояние = Перечисления.СостоянияСообщенийRMQ.ЖдетОтправки;
	КонецЕсли;
	
	Запись = РегистрыСведений.СообщенияRMQ.СоздатьМенеджерЗаписи();
	Запись.Период = Период;
	Запись.ОбъектМетаданных = ПолучитьПредставлениеОбъектаМетаданных(Источник);
	Запись.Идентификатор = Источник.Ссылка.УникальныйИдентификатор();
	Запись.ХранилищеСообщения = Новый ХранилищеЗначения(Сообщение, Новый СжатиеДанных(9)); 
	Запись.НастройкиМаршрутизации = ОбслуживаниеСообщенийRMQ.ОпределитьОчередьRabbitMQПоОбъектуМетаданных(Запись.ОбъектМетаданных);
	Запись.Состояние = Состояние;
	
	Запись.Записать();
	
КонецПроцедуры    

Функция ПолучитьПредставлениеОбъектаМетаданных(Источник)  
	
	ПредставлениеОбъектаМетаданных = Источник.Ссылка.Метаданные().ПолноеИмя();  
	
	Возврат ПредставлениеОбъектаМетаданных;
	
КонецФункции  

#КонецОбласти
